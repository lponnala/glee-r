
# The process of package development, as done in RStudio

### use the devtools package throughout
	library(devtools)

### check if you have everything you need to build the package
	devtools::has_devel()

### create the barebones package
	devtools::create("gleeR")

### add functions into R/
	ensure that you use pkg::func for functions in other packages
	some doubtful cases (turns out I did *not* need to specify pkg:: for any of these):
		stats::lm
		grDevices::png
		graphics::plot
		graphics::legend
		graphics::legend
		graphics::par
		stats::predict

### mention packages used
	setwd("gleeR/")
	devtools::use_package("xlsx")
	devtools::use_package("stringr")
	devtools::use_package("magrittr")

### specify Rcpp
	devtools::use_rcpp()

### set up Rcpp
	copy cpp code into src/
	add these two lines somewhere in the .r code file
		#' @useDynLib gleeR
		#' @importFrom Rcpp sourceCpp

### add roxygen comments to all functions

### generate documentation
	devtools::document()
	if you get a warning saying NAMESPACE not generated by roxygen2:
		delete the NAMESPACE and run devtools::document() again
	if you get an error related to Rcpp:
		delete the .dll and .o files from src/ and run devtools::document() again

### check the documentation for each function
	?data_ok
	?getPvals

### create a vignette
	devtools::use_vignette("usage-notes")
	edit the created vignettes/usage-notes.Rmd
	generate the html vignette and inspect it
		rmarkdown::render("./vignettes/usage-notes.Rmd")

### check & build package
	devtools::check()
	devtools::build()

### install the package using one of the following options
	devtools::install_local("gleeR_0.1.tar.gz")
	"C:\Program Files\R\R-3.1.1\bin\R.exe" CMD INSTALL gleeR_0.1.tar.gz

### check by running the code in check/glee-run.r
	as of 2014-11-17, this works on windows machines only
	running on ubuntu throws error saying it cannot find boost libraries
